Source: docker-ce
Section: admin
Priority: optional
Maintainer: Docker <support@docker.com>
Build-Depends: bash,
               bash-completion,
               btrfs-tools | libbtrfs-dev,
               ca-certificates,
               cmake,
               dh-apparmor,
               dh-systemd,
               gcc,
               git,
               libc-dev,
               libdevmapper-dev,
               libltdl-dev,
               libseccomp-dev,
               libtool,
               make,
               pkg-config
Standards-Version: 3.9.6
Homepage: https://docker.com
Vcs-Browser: https://github.com/docker/docker
Vcs-Git: git://github.com/docker/docker.git

Package: docker-ce
Architecture: linux-any
Depends: docker-ce-cli, containerd.io, iptables, ${shlibs:Depends}
Recommends: aufs-tools,
            ca-certificates,
            cgroupfs-mount | cgroup-lite,
            git,
            pigz,
            xz-utils,
            libltdl7,
            ${apparmor:Recommends}
Conflicts: docker (<< 1.5~), docker.io, lxc-docker, lxc-docker-virtual-package, docker-engine, docker-engine-cs
Replaces: docker-engine
Description: Docker: the open-source application container engine
 Docker is an open source project to build, ship and run any application as a
 lightweight container
 .
 Docker containers are both hardware-agnostic and platform-agnostic. This means
 they can run anywhere, from your laptop to the largest EC2 compute instance and
 everything in between - and they don't require you to use a particular
 language, framework or packaging system. That makes them great building blocks
 for deploying and scaling web apps, databases, and backend services without
 depending on a particular stack or provider.

Package: docker-ce-cli
Architecture: linux-any
Depends: ${shlibs:Depends}
Conflicts: docker (<< 1.5~), docker.io, lxc-docker, lxc-docker-virtual-package, docker-engine, docker-engine-cs
Breaks: docker-ce (<< 18.06~)
Description: Docker CLI: the open-source application container engine
 Docker is an open source project to build, ship and run any application as a
 lightweight container
 .
 Docker containers are both hardware-agnostic and platform-agnostic. This means
 they can run anywhere, from your laptop to the largest EC2 compute instance and
 everything in between - and they don't require you to use a particular
 language, framework or packaging system. That makes them great building blocks
 for deploying and scaling web apps, databases, and backend services without
 depending on a particular stack or provider.
